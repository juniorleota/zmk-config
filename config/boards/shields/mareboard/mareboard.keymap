#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUM 1
#define NAV 2
#define SYMB 3
#define MOUSE 4
#define FUNC 5

#define HYPER LS(LC(LA(LCMD)))
#define MEH LS(LC(LALT))

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_36keys.h"
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#include "combos.dtsi"
#include "mouse.dtsi"

#define COMBO_TIMEOUT_MS 45

/ {
  combos {
    compatible = "zmk,combos";
    
    combo_LeftCmd {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <2 3>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp LGUI>; 
    };
    
    combo_RightCmd {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <6 7>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp RGUI>; 
    };
    
    combo_LeftHyper {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <1 2>;
      layers = <BASE NAV NUM SYMB>;
      bindings = <&kp HYPER>;
    };
    
    combo_RightHyper {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <7 8>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp HYPER>;
    };
    
    combo_LeftTab {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <11 13>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp TAB>; 
    };
    
    combo_A {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <12 13>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp A>; 
    };
    
    combo_RightEnter {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <17 18>;
      layers = <NUM BASE NAV SYMB>;
      bindings = <&kp RET>; 
    };
    
    combo_LeftBackspace {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <11 12>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp BACKSPACE>; 
    };
    
    combo_RightEsc {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <16 17>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp ESC>; 
    };
        
    combo_LeftShift {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <21 22>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp LSFT>; 
    };
    
    combo_RightAlt {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <27 28>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp RALT>; 
    };

    combo_LeftMeh {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <22 23>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp MEH>;
    };
    
    combo_RightMeh {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <26 27>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&kp MEH>;
    };
    
    combo_PANIC {
      timeout-ms = <COMBO_TIMEOUT_MS>;
      key-positions = <16 18>;
      layers = <BASE NUM NAV SYMB>;
      bindings = <&to BASE>; 
    };
  };

  behaviors {
  };

  keymap {
    compatible = "zmk,keymap";
    
    Base_layer {
      bindings = 
        &kp Q             &kp W               &kp F               &kp J               &kp B               &kp Y               &kp U               &kp I               &kp O               &kp P
        &kp A             &kp R               &kp S               &kp T               &kp G               &kp M               &kp N               &kp E               &kp L               &kp SEMICOLON
        &kp Z             &kp X               &kp C               &kp D               &kp V               &kp K               &kp H               &kp COMMA           &kp PERIOD          &kp SLASH
        &to MOUSE         &lt NAV BACKSPACE   &kp LEFT_SHIFT      &sl SYMB            &lt NUM SPACE       &lt FUNC RIGHT_CONTROL
      >;
    };
    
    Num_layer {
      bindings = 
        &none             &kp NUMBER_6        &kp NUMBER_5        &kp NUMBER_4        &kp DOT             &none               &none               &none               &none               &none
        &kp NUMBER_0      &kp NUMBER_3        &kp NUMBER_2        &kp NUMBER_1        &kp TAB             &none               &none               &none               &none               &none
        &none             &kp NUMBER_9        &kp NUMBER_8        &kp NUMBER_7        &none               &none               &none               &none               &none               &none
        &kp NUMBER_0      &kp DEL             &none               &none               &none               &none
      >;
    };
    
    Nav_layer {
      bindings = 
        &none             &none               &none               &none               &none               &kp LA(LEFT)        &none               &none               &kp LA(RIGHT)       &none
        &none             &none               &none               &none               &none               &kp LEFT            &kp DOWN            &kp UP              &kp RIGHT           &none
        &none             &none               &none               &none               &none               &kp LG(LEFT)        &kp PG_DN           &kp PG_UP           &kp LG(RIGHT)       &none
        &none             &none               &none               &none               &none               &none
      >;
    };
    
    Symb_layer {
      bindings = 
        &none             &none               &kp EQUAL           &kp PLUS            &none               &kp DOUBLE_QUOTES   &kp MINUS           &kp UNDERSCORE      &kp PIPE            &kp BACKSLASH
        &kp EXCLAMATION   &kp AT_SIGN         &kp HASH            &kp DOLLAR          &kp PERCENT         &kp CARET           &kp AMPERSAND       &kp ASTERISK        &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS
        &none             &none               &kp TILDE           &kp GRAVE           &none               &kp SINGLE_QUOTE    &kp LEFT_BRACE      &kp RIGHT_BRACE     &kp LEFT_BRACKET    &kp RIGHT_BRACKET
        &to BASE          &none               &none               &none               &none               &none
      >;
    };
    
    Mouse_layer {
      bindings = 
        &none             &none               &none               &none               &none               U_WH_L              U_WH_U              U_WH_D              U_WH_R              &none
        &kp LCTRL         &kp LALT            &kp LGUI            &kp LSFT            &none               U_MS_L              U_MS_D              U_MS_U              U_MS_R              &none
        &none             &none               &none               &none               &none               &none               &none               &none               &none               &none
        &to BASE          &none               &none               &mkp RCLK           &mkp LCLK           &mkp MCLK
      >;
    };
    
    Func_layer {
      bindings = 
        &none             &kp F6              &kp F5              &kp F4              &none               &none               &none               &none               &none               &none
        &none             &kp F3              &kp F2              &kp F1              &none               &none               &none               &none               &none               &none
        &none             &kp F9              &kp F8              &kp F7              &none               &none               &none               &none               &none               &none
        &kp F12           &kp F11             &kp F10             &none               &none               &none
      >;
    };
  };
};